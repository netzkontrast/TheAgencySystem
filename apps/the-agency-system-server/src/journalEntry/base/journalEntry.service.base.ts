/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  JournalEntry as PrismaJournalEntry,
  AiTask as PrismaAiTask,
  User as PrismaUser,
} from "@prisma/client";

export class JournalEntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JournalEntryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.journalEntry.count(args);
  }

  async journalEntries(
    args: Prisma.JournalEntryFindManyArgs
  ): Promise<PrismaJournalEntry[]> {
    return this.prisma.journalEntry.findMany(args);
  }
  async journalEntry(
    args: Prisma.JournalEntryFindUniqueArgs
  ): Promise<PrismaJournalEntry | null> {
    return this.prisma.journalEntry.findUnique(args);
  }
  async createJournalEntry(
    args: Prisma.JournalEntryCreateArgs
  ): Promise<PrismaJournalEntry> {
    return this.prisma.journalEntry.create(args);
  }
  async updateJournalEntry(
    args: Prisma.JournalEntryUpdateArgs
  ): Promise<PrismaJournalEntry> {
    return this.prisma.journalEntry.update(args);
  }
  async deleteJournalEntry(
    args: Prisma.JournalEntryDeleteArgs
  ): Promise<PrismaJournalEntry> {
    return this.prisma.journalEntry.delete(args);
  }

  async findAiTasks(
    parentId: string,
    args: Prisma.AiTaskFindManyArgs
  ): Promise<PrismaAiTask[]> {
    return this.prisma.journalEntry
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .aiTasks(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.journalEntry
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
