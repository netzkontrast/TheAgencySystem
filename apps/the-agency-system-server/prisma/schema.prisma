datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AiAgent {
  aiTasks     AiTask[]
  configField Json?
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  updatedAt   DateTime @updatedAt
}

model JournalEntry {
  aiTasks   AiTask[]
  content   String?
  createdAt DateTime  @default(now())
  date      DateTime?
  id        String    @id @default(cuid())
  title     String?
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model AiTask {
  aiAgent        AiAgent?          @relation(fields: [aiAgentId], references: [id])
  aiAgentId      String?
  createdAt      DateTime          @default(now())
  description    String?
  id             String            @id @default(cuid())
  journalEntry   JournalEntry?     @relation(fields: [journalEntryId], references: [id])
  journalEntryId String?
  status         EnumAiTaskStatus?
  updatedAt      DateTime          @updatedAt
}

model User {
  createdAt      DateTime       @default(now())
  email          String?        @unique
  firstName      String?
  id             String         @id @default(cuid())
  journalEntries JournalEntry[]
  lastName       String?
  password       String
  role           EnumUserRole?
  roles          Json
  updatedAt      DateTime       @updatedAt
  username       String         @unique
}

enum EnumAiTaskStatus {
  Option1
}

enum EnumUserRole {
  Option1
}
